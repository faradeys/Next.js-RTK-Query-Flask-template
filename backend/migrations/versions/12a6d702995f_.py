"""empty message

Revision ID: 12a6d702995f
Revises: 
Create Date: 2023-09-14 11:32:51.376042

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '12a6d702995f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('files',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ext', sa.VARCHAR(length=8), autoincrement=False, nullable=True),
    sa.Column('file_mimetype', sa.VARCHAR(length=35), autoincrement=False, nullable=True),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('md5hash', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='files_pkey'),
    sa.UniqueConstraint('md5hash', name='files_md5hash_key')
    )
    op.create_table('promo_codes',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('type', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('order_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.Column('ends_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('min_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('max_price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='promo_codes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('service_params',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('parent_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('u_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('spec_value', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('deprecated', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.Column('update_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['service_params.id'], name='service_params_parent_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='service_params_pkey')
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('side_id', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('bonuses', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=160), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_banned', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('banned_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.Column('update_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.Column('bonuses_add_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('referrers_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('referrer_status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('self_referal_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['referrers_id'], ['users.id'], name='users_referrers_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_phone', 'users', ['phone'], unique=False)
    op.create_table('prices',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('model_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('service_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deprecated', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.Column('update_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['service_params.id'], name='prices_model_id_fkey'),
    sa.ForeignKeyConstraint(['service_id'], ['service_params.id'], name='prices_service_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='prices_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('roles_parents',
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['roles.id'], name='roles_parents_parent_id_fkey'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='roles_parents_role_id_fkey')
    )
    op.create_table('users_roles',
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='users_roles_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='users_roles_user_id_fkey')
    )
    op.create_table('orders',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('customer_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('price', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('ordered_service_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.Column('update_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['users.id'], name='orders_customer_id_fkey'),
    sa.ForeignKeyConstraint(['ordered_service_id'], ['prices.id'], name='orders_ordered_service_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='orders_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('promo_codes_orders',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('order_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('promo_code_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('(now())::timestamp(0) without time zone'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name='promo_codes_orders_order_id_fkey'),
    sa.ForeignKeyConstraint(['promo_code_id'], ['promo_codes.id'], name='promo_codes_orders_promo_code_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='promo_codes_orders_pkey')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('promo_codes_orders')
    op.drop_table('orders')
    op.drop_table('users_roles')
    op.drop_table('roles_parents')
    op.drop_table('prices')
    op.drop_index('ix_users_phone', table_name='users')
    op.drop_table('users')
    op.drop_table('service_params')
    op.drop_table('roles')
    op.drop_table('promo_codes')
    op.drop_table('files')
    # ### end Alembic commands ###
